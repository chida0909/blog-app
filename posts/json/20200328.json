{
  "id": 1,
  "title": "Nuxt.jsのAPIを読み解く",
  "permalink": "nuxt-api-decipher",
  "description": "Nuxtの公式ガイドを見ただけで、まだ理解出来ていないので",
  "created_at": "2020-03-28T00:00:00.000Z",
  "tags": "nuxt",
  "bodyContent": "Nuxt.jsのAPIは [Nuxtの公式ガイド](https://ja.nuxtjs.org/api) に書いています。\nただ、公式ガイドを読んでいてもあまり頭に入らなかったので、箇条書きで仕様をまとめました。\n\n# ページ\n\n## asyncDataメソッド\n- 画面のレンダリング前に呼ばれます\n- ページコンポーネントのデータとしてセットされます\n- returnしたものは、dataオブジェクトにマージされます\n- マージされるため、dataオブジェクトがなくてもエラーになりません\n- 第一引数としてcontextを受け取れます  \n[context](https://ja.nuxtjs.org/api/context)には、asyncData内で使用できるparams, store, routeなどのオブジェクトが入っています。\n\n## fetchメソッド\n- 仕様はasyncDataメソッドとほぼ同じです\n- 異なる点はデータをVuexのストアとしてセットされます\n\n## headメソッド\n- SEO対策として、HTMLのtitleタグやmetaタグを設定できます\n- nuxt.config.jsやpagesディレクトリ配下のコンポーネント内で設定します\n- dataオブジェクトにtitleを定義している場合、this.titleで呼び出せます\n\n## layoutプロパティ\n- 全ページ共通のヘッダーやサイドバーを設定できます\n- 使用する際はlayoutフォルダの直下に、default.vueを作成します（デフォルトレイアウト）\n- デフォルトレイアウトを一部ページで使いたくない場合は、カスタムレイアウトを設定します\n\n## middlewareプロパティ\n- 画面がレンダリングされる前に関数を実行することが出来ます\n\n## transitionプロパティ\n- ページ遷移時のアニメーションを設定できます\n\n## validateメソッド\n- 動的なルーティングを行うコンポーネント内で、バリデーションを設定できます\n- falseの場合は404エラーページを表示します  \n動的ルーティングとは、パラメーターごとに表示を切り替えるページのことです。\n  \n&#13;&#10;\n  \n他にkeyプロパティ、loadingプロパティ、scrollToTopプロパティ、watchQueryプロパティがありますが、今回は割愛します。",
  "bodyHtml": "<p>Nuxt.jsのAPIは <a href=\"https://ja.nuxtjs.org/api\">Nuxtの公式ガイド</a> に書いています。\nただ、公式ガイドを読んでいてもあまり頭に入らなかったので、箇条書きで仕様をまとめました。</p>\n<h1>ページ</h1>\n<h2>asyncDataメソッド</h2>\n<ul>\n<li>画面のレンダリング前に呼ばれます</li>\n<li>ページコンポーネントのデータとしてセットされます</li>\n<li>returnしたものは、dataオブジェクトにマージされます</li>\n<li>マージされるため、dataオブジェクトがなくてもエラーになりません</li>\n<li>第一引数としてcontextを受け取れます<br>\n<a href=\"https://ja.nuxtjs.org/api/context\">context</a>には、asyncData内で使用できるparams, store, routeなどのオブジェクトが入っています。</li>\n</ul>\n<h2>fetchメソッド</h2>\n<ul>\n<li>仕様はasyncDataメソッドとほぼ同じです</li>\n<li>異なる点はデータをVuexのストアとしてセットされます</li>\n</ul>\n<h2>headメソッド</h2>\n<ul>\n<li>SEO対策として、HTMLのtitleタグやmetaタグを設定できます</li>\n<li>nuxt.config.jsやpagesディレクトリ配下のコンポーネント内で設定します</li>\n<li>dataオブジェクトにtitleを定義している場合、this.titleで呼び出せます</li>\n</ul>\n<h2>layoutプロパティ</h2>\n<ul>\n<li>全ページ共通のヘッダーやサイドバーを設定できます</li>\n<li>使用する際はlayoutフォルダの直下に、default.vueを作成します（デフォルトレイアウト）</li>\n<li>デフォルトレイアウトを一部ページで使いたくない場合は、カスタムレイアウトを設定します</li>\n</ul>\n<h2>middlewareプロパティ</h2>\n<ul>\n<li>画面がレンダリングされる前に関数を実行することが出来ます</li>\n</ul>\n<h2>transitionプロパティ</h2>\n<ul>\n<li>ページ遷移時のアニメーションを設定できます</li>\n</ul>\n<h2>validateメソッド</h2>\n<ul>\n<li>動的なルーティングを行うコンポーネント内で、バリデーションを設定できます</li>\n<li>falseの場合は404エラーページを表示します<br>\n動的ルーティングとは、パラメーターごとに表示を切り替えるページのことです。</li>\n</ul>\n<p>\r\n</p>\n<p>他にkeyプロパティ、loadingプロパティ、scrollToTopプロパティ、watchQueryプロパティがありますが、今回は割愛します。</p>\n",
  "dir": "posts/json",
  "base": "20200328.json",
  "ext": ".json",
  "sourceBase": "20200328.md",
  "sourceExt": ".md"
}