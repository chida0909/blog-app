{
  "title": "ページネーションの実装",
  "permalink": "vue-pagination",
  "description": null,
  "created_at": "2020-04-28T00:00:00.000Z",
  "tags": "Vue",
  "bodyContent": "[リンク](./secret)\n  \nPagiNation.vue（ページネーション用のコンポーネント）\n```vue\n<template>\n  <v-container>\n    <v-row justify=\"center\">\n      <v-col cols=\"8\">\n        <v-container class=\"max-width\">\n          <v-pagination\n            v-model=\"dataCurrent\"\n            class=\"my-4\"\n            :length=\"pageLength\"\n            @input=\"dataChange\"\n          ></v-pagination>\n        </v-container>\n      </v-col>\n    </v-row>\n  </v-container>\n</template>\n\n<script>\nexport default {\n  props: {\n    pageCurrent: Number,\n    pageLength: Number,\n    pageChange: Function\n  },\n  data() {\n    return {\n      dataChange: this.pageChange,\n      dataCurrent: this.pageCurrent\n    }\n  }\n}\n</script>\n```\n\nindex.vue\n```vue\n<template>\n  <v-app>\n    <span\n      v-for=\"content in contents\"\n      :key=\"content.id\"\n    >\n      {{content.title}}\n    </span>\n    <PagiNation\n      :pageCurrent=\"pageCurrent\"\n      :pageLength=\"pageLength\"\n      :pageChange=\"pageChange\"\n    />\n  </v-app>\n</template>\n\n<script>\nimport PagiNation from '@/components/PagiNation.vue'\nexport default {\n  components: {\n    PagiNation\n  },\n  data() {\n    return {\n      pageCurrent: 1, // 初期表示は1から始める\n      pageLength: 0,\n      maxCount: 3\n    }\n  },\n  asyncData(context) {\n    let contents = [\n      { id: 0, title: 'hoge0'},\n      { id: 1, title: 'hoge1'},\n      { id: 2, title: 'hoge2'},\n      { id: 3, title: 'hoge3'},\n      { id: 4, title: 'hoge4'},\n      { id: 5, title: 'hoge5'}\n    ]\n    // ページ内に表示する最大コンテンツ数\n    const MAX_COUNT = 3\n    // 全体のページ数を取得\n    const pageLength = Math.ceil(contents.length / MAX_COUNT)\n    // ページング処理に使うため、一時的に保持\n    const contentsAll = contents\n    return { contents, pageLength, contentsAll }\n  },\n  methods: {\n    pageChange( pageNumber ) {\n      this.contents = this.contentsAll\n      const startCount = pageNumber === 1 ? 0 : ( pageNumber - 1 ) * this.maxCount\n      const endCount = pageNumber * this.maxCount\n      this.contents = this.contents.slice( startCount, endCount )\n    }\n  },\n  mounted() {\n    // Vueの要素がマウントされた後、最初のコンテンツの表示を確定させる処理\n    this.contents = this.contents.slice( 0, this.maxCount )\n  }\n}\n</script>\n```",
  "bodyHtml": "<p><a href=\"./secret\">リンク</a></p>\n<p>PagiNation.vue（ページネーション用のコンポーネント）</p>\n<pre><code class=\"hljs\">&lt;template&gt;\n  &lt;v-container&gt;\n    &lt;v-row justify=\"center\"&gt;\n      &lt;v-col cols=\"8\"&gt;\n        &lt;v-container class=\"max-width\"&gt;\n          &lt;v-pagination\n            v-model=\"dataCurrent\"\n            class=\"my-4\"\n            :length=\"pageLength\"\n            @input=\"dataChange\"\n          &gt;&lt;/v-pagination&gt;\n        &lt;/v-container&gt;\n      &lt;/v-col&gt;\n    &lt;/v-row&gt;\n  &lt;/v-container&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nexport default {\n  props: {\n    pageCurrent: Number,\n    pageLength: Number,\n    pageChange: Function\n  },\n  data() {\n    return {\n      dataChange: this.pageChange,\n      dataCurrent: this.pageCurrent\n    }\n  }\n}\n&lt;/script&gt;</code></pre><p>index.vue</p>\n<pre><code class=\"hljs\">&lt;template&gt;\n  &lt;v-app&gt;\n    &lt;span\n      v-for=\"content in contents\"\n      :key=\"content.id\"\n    &gt;\n      {{content.title}}\n    &lt;/span&gt;\n    &lt;PagiNation\n      :pageCurrent=\"pageCurrent\"\n      :pageLength=\"pageLength\"\n      :pageChange=\"pageChange\"\n    /&gt;\n  &lt;/v-app&gt;\n&lt;/template&gt;\n\n&lt;script&gt;\nimport PagiNation from '@/components/PagiNation.vue'\nexport default {\n  components: {\n    PagiNation\n  },\n  data() {\n    return {\n      pageCurrent: 1, // 初期表示は1から始める\n      pageLength: 0,\n      maxCount: 3\n    }\n  },\n  asyncData(context) {\n    let contents = [\n      { id: 0, title: 'hoge0'},\n      { id: 1, title: 'hoge1'},\n      { id: 2, title: 'hoge2'},\n      { id: 3, title: 'hoge3'},\n      { id: 4, title: 'hoge4'},\n      { id: 5, title: 'hoge5'}\n    ]\n    // ページ内に表示する最大コンテンツ数\n    const MAX_COUNT = 3\n    // 全体のページ数を取得\n    const pageLength = Math.ceil(contents.length / MAX_COUNT)\n    // ページング処理に使うため、一時的に保持\n    const contentsAll = contents\n    return { contents, pageLength, contentsAll }\n  },\n  methods: {\n    pageChange( pageNumber ) {\n      this.contents = this.contentsAll\n      const startCount = pageNumber === 1 ? 0 : ( pageNumber - 1 ) * this.maxCount\n      const endCount = pageNumber * this.maxCount\n      this.contents = this.contents.slice( startCount, endCount )\n    }\n  },\n  mounted() {\n    // Vueの要素がマウントされた後、最初のコンテンツの表示を確定させる処理\n    this.contents = this.contents.slice( 0, this.maxCount )\n  }\n}\n&lt;/script&gt;</code></pre>",
  "dir": "posts/json",
  "base": "20200428.json",
  "ext": ".json",
  "sourceBase": "20200428.md",
  "sourceExt": ".md"
}