{
  "title": "NuxtにTypeScriptを導入する",
  "permalink": "nuxt-typescript",
  "description": null,
  "created_at": "2020-05-05T00:00:00.000Z",
  "tags": "TypeScript",
  "bodyContent": "# インストール方法\nNuxtに導入TypeScriptを導入する手順から書きます。[公式サイト](https://typescript.nuxtjs.org/ja/guide/setup.html)  \n\n1. インストールします。  \n```\n$ npm install --save-dev @nuxt/typescript-build\n```\n\n2. nuxt.config.jsに設定を追加します。\n```js\nexport default {\n  buildModules: ['@nuxt/typescript-build']\n}\n```\n\n3. tsconfig.jsonファイルを作成して、公式の内容をそのままコピペします。  \n\n4. scriptにlang=\"ts\"を追加して、ページをリロ―ドします。  \n\n私の場合は途中からTypeScriptを導入したため、エラーをはいてくれました。\n```\n66:17 Parameter 'val' implicitly has an 'any' type.\n    64 |   },\n    65 |   filters: {\n  > 66 |     contentDate(val) {\n       |                 ^\n    67 |       const date = new Date(val)\n    68 |       let getMonth = date.getMonth() + 1\n    69 |       let getDate = date.getDate()\n```\n\n# コンポーネントの定義\nVueコンポーネント内部で\u001cTypeScriptが型を適切に推測できるようにします。対応方法は次の3つです。\n\n- vue-class-component\n- vue-property-decorator\n- Vue.extend\n\n## vue-class-component\nクラススタイルの構文でVueコンポーネントを作成できるライブラリです。@Componentデコレータでクラスに注釈を付けることにより、コンポーネントデータとメソッドを定義できます。\n\n## vue-property-decorator\nvue-class-componentをさらに使いやすくするためのものです。こちらもvue-class-componentと同様、クラススタイルの構文です。\n\n## Vue.extend\nTypeScript内でVueモジュールをimport/extendして書く方法です。JavaScriptでのVueコンポーネントの記述に近い書き方でTypeScriptを書くことができます。  \n\nClassAPIはVue3.0のRFCにリジェクトされたため、今後非推奨になる可能性があります。そのため、Vue.extendの記述を使用するのが良さそうです。  \n[https://github.com/vuejs/rfcs/pull/17#issuecomment-494242121](https://github.com/vuejs/rfcs/pull/17#issuecomment-494242121)  \n\n# Vue.extendの使用\n以下のエラーはlang='ts'を指定して、Vue.extendを使っていない時に出た内容です。TypeScriptがVueインスタンスと認識していないため、Vue.extendを使用してエラーを解決します。\n\n```\n23:10 Property '$nextTick' does not exist on type '{ mounted(): void; head(): { title: string; }; }'.\n    21 | export default {\n    22 |   mounted () {\n  > 23 |     this.$nextTick(() => {\n       |          ^\n    24 |       this.$nuxt.$loading.start()\n    25 |       setTimeout(() => this.$nuxt.$loading.finish(), 2000)\n    26 |     })\n```\n\n## 変更前\n```js\n<script>\nexport default{}\n</script>\n```\n\n## 変更後\n```js\n<script lang='ts'>\nimport Vue from 'vue'\nexport default Vue.extend({})\n</script>\n```\n\n# 参考\n- [セットアップ | Nuxt TypeScript](https://typescript.nuxtjs.org/ja/migration.html)\n- [TypeScriptのサポート — Vue.js](https://jp.vuejs.org/v2/guide/typescript.html)\n- [デコレータ使わない Vue.js + TypeScript で進んだ「LINEのお年玉」キャンペーン - LINE ENGINEERING](https://engineering.linecorp.com/ja/blog/vue-js-typescript-otoshidama/)\n- [【Nuxt.js】TypeScript基礎編：Vue.extendでシンプルなコードを書こう｜aLiz｜note](https://note.com/aliz/n/n2258e2843bba)",
  "bodyHtml": "<h1>インストール方法</h1>\n<p>Nuxtに導入TypeScriptを導入する手順から書きます。<a href=\"https://typescript.nuxtjs.org/ja/guide/setup.html\">公式サイト</a></p>\n<ol>\n<li>インストールします。</li>\n</ol>\n<pre><code>$ npm install --save-dev @nuxt/typescript-build\n</code></pre>\n<ol start=\"2\">\n<li>nuxt.config.jsに設定を追加します。</li>\n</ol>\n<pre><code class=\"hljs\"><span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> {\n  <span class=\"hljs-attr\">buildModules</span>: [<span class=\"hljs-string\">'@nuxt/typescript-build'</span>]\n}</code></pre><ol start=\"3\">\n<li>\n<p>tsconfig.jsonファイルを作成して、公式の内容をそのままコピペします。</p>\n</li>\n<li>\n<p>scriptにlang=&quot;ts&quot;を追加して、ページをリロ―ドします。</p>\n</li>\n</ol>\n<p>私の場合は途中からTypeScriptを導入したため、エラーをはいてくれました。</p>\n<pre><code>66:17 Parameter 'val' implicitly has an 'any' type.\n    64 |   },\n    65 |   filters: {\n  &gt; 66 |     contentDate(val) {\n       |                 ^\n    67 |       const date = new Date(val)\n    68 |       let getMonth = date.getMonth() + 1\n    69 |       let getDate = date.getDate()\n</code></pre>\n<h1>コンポーネントの定義</h1>\n<p>Vueコンポーネント内部で\u001cTypeScriptが型を適切に推測できるようにします。対応方法は次の3つです。</p>\n<ul>\n<li>vue-class-component</li>\n<li>vue-property-decorator</li>\n<li>Vue.extend</li>\n</ul>\n<h2>vue-class-component</h2>\n<p>クラススタイルの構文でVueコンポーネントを作成できるライブラリです。@Componentデコレータでクラスに注釈を付けることにより、コンポーネントデータとメソッドを定義できます。</p>\n<h2>vue-property-decorator</h2>\n<p>vue-class-componentをさらに使いやすくするためのものです。こちらもvue-class-componentと同様、クラススタイルの構文です。</p>\n<h2>Vue.extend</h2>\n<p>TypeScript内でVueモジュールをimport/extendして書く方法です。JavaScriptでのVueコンポーネントの記述に近い書き方でTypeScriptを書くことができます。</p>\n<p>ClassAPIはVue3.0のRFCにリジェクトされたため、今後非推奨になる可能性があります。そのため、Vue.extendの記述を使用するのが良さそうです。<br>\n<a href=\"https://github.com/vuejs/rfcs/pull/17#issuecomment-494242121\">https://github.com/vuejs/rfcs/pull/17#issuecomment-494242121</a></p>\n<h1>Vue.extendの使用</h1>\n<p>以下のエラーはlang='ts'を指定して、Vue.extendを使っていない時に出た内容です。TypeScriptがVueインスタンスと認識していないため、Vue.extendを使用してエラーを解決します。</p>\n<pre><code>23:10 Property '$nextTick' does not exist on type '{ mounted(): void; head(): { title: string; }; }'.\n    21 | export default {\n    22 |   mounted () {\n  &gt; 23 |     this.$nextTick(() =&gt; {\n       |          ^\n    24 |       this.$nuxt.$loading.start()\n    25 |       setTimeout(() =&gt; this.$nuxt.$loading.finish(), 2000)\n    26 |     })\n</code></pre>\n<h2>変更前</h2>\n<pre><code class=\"hljs\">&lt;script&gt;\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span>{}\n&lt;<span class=\"hljs-regexp\">/script&gt;</span></code></pre><h2>変更後</h2>\n<pre><code class=\"hljs\">&lt;script lang=<span class=\"hljs-string\">'ts'</span>&gt;\n<span class=\"hljs-keyword\">import</span> Vue <span class=\"hljs-keyword\">from</span> <span class=\"hljs-string\">'vue'</span>\n<span class=\"hljs-keyword\">export</span> <span class=\"hljs-keyword\">default</span> Vue.extend({})\n&lt;<span class=\"hljs-regexp\">/script&gt;</span></code></pre><h1>参考</h1>\n<ul>\n<li><a href=\"https://typescript.nuxtjs.org/ja/migration.html\">セットアップ | Nuxt TypeScript</a></li>\n<li><a href=\"https://jp.vuejs.org/v2/guide/typescript.html\">TypeScriptのサポート — Vue.js</a></li>\n<li><a href=\"https://engineering.linecorp.com/ja/blog/vue-js-typescript-otoshidama/\">デコレータ使わない Vue.js + TypeScript で進んだ「LINEのお年玉」キャンペーン - LINE ENGINEERING</a></li>\n<li><a href=\"https://note.com/aliz/n/n2258e2843bba\">【Nuxt.js】TypeScript基礎編：Vue.extendでシンプルなコードを書こう｜aLiz｜note</a></li>\n</ul>\n",
  "dir": "posts/json",
  "base": "20200505.json",
  "ext": ".json",
  "sourceBase": "20200505.md",
  "sourceExt": ".md"
}