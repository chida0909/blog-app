{
  "title": "Atomic Designについて",
  "permalink": "css-atomic-design",
  "description": null,
  "created_at": "2020-04-29T00:00:00.000Z",
  "tags": "CSS",
  "bodyContent": "Atomic Designとは  \nアメリカのWebデザイナーBrad Frost（ブラッド・フロスト）氏が考案・提唱したデザインシステム（デザインのルール）です。  \n\nAtomic Designでは5つの粒度に分けて管理します。  \n- Atoms（アトム）原子  \n- Molecules（モルキュール）分子\n- Organisms（オルガニズム）有機体\n- Templates テンプレート\n- Pages ページ\n\n# 5つの粒度\nAtoms（アトム）原子  \nこれ以上分割することができない、UIを構築するための最小単位です。基本的には単体のHTMLタグと同等な役割となります。（例）ボタン、フォーム、テキスト、アイコンなど\n  \nMolecules（モルキュール）分子  \n2つ以上の原子から構成されるUIコンポーネントです。（例）削除ボタン、検索フォームやメニューリストなど\n  \nOrganisms（オルガニズム）有機体  \n分子を組み合わせて作るUIコンポーネントです（例）ヘッダー、フッター、パン屑、モーダルやテーブルなど\n  \nTemplates テンプレート  \nコンテンツの入っていないレイアウト情報で、Viewのみのワイヤーフレームと同じです。  \n  \nPages ページ  \nテンプレートに画像やテキストなど、具体的なコンテンツ情報が入っているものです。  \n\n# 議論になりそうな点  \n\n## storeの参照の範囲\n他の記事を読んでもAtomとMoleculeからはstoreの参照はしないという意見がほとんどでした。AtomとMoleculeは複数コンポーネントから呼び出す想定があるため、storeの参照をすると他のコンポーネントにも影響を与えるからです。例えば、特定のボタンをdisabled属性を付与した時に、他コンポーネントの同じボタンもdisabledになってしまうという事かと思われます。（判断しやすくするために、プレフィックスを与えるのがベスト?）\n  \n## Atomsの粒度\nボタンは<button>や<a href=\"\">をボタンに見立てたものなどがあります。aタグの場合、最小単位はリンクですが、これをボタンとして扱うのかという事です。他にもラベルはテキストを含めたものをAtomsとして扱うのか、数値は1000の単位になったらカンマを入れる処置までatomsに含めるのか。\n  \n## Atomsのコンポーネントの肥大化の懸念\nボタン1つ取っても、送信ボタン・完了ボタン・削除ボタン・戻るボタンなど種類は多種多様ある。そのため、atoms/btn/send.vueのように間に1階層挟んだ方が見通しが良い?\n\n## Nuxtとの相性\nNuxt.jsにはpagesやlayoutsディレクトリがあるので、Atomic Designとどう合わせるか。componentsディレクトリには、pages以外の4階層を配置して、pagesディレクトリにpagesを置くのがベストなのか。\n\n# 参考記事\n-  [Atomic Designを採用したWeb開発におけるistyleの現状と課題 - ログミーTech](https://logmi.jp/tech/articles/320358)\n-  [Atomic Design を分かったつもりになる | DeNA DESIGN BLOG](https://design.dena.com/design/atomic-design-を分かったつもりになる/)\n- [Vue.jsでAtomic Designを実践する - Qiita](https://qiita.com/hareku/items/04705fcf92cc80ec4095)",
  "bodyHtml": "<p>Atomic Designとは<br>\nアメリカのWebデザイナーBrad Frost（ブラッド・フロスト）氏が考案・提唱したデザインシステム（デザインのルール）です。</p>\n<p>Atomic Designでは5つの粒度に分けて管理します。</p>\n<ul>\n<li>Atoms（アトム）原子</li>\n<li>Molecules（モルキュール）分子</li>\n<li>Organisms（オルガニズム）有機体</li>\n<li>Templates テンプレート</li>\n<li>Pages ページ</li>\n</ul>\n<h1>5つの粒度</h1>\n<p>Atoms（アトム）原子<br>\nこれ以上分割することができない、UIを構築するための最小単位です。基本的には単体のHTMLタグと同等な役割となります。（例）ボタン、フォーム、テキスト、アイコンなど</p>\n<p>Molecules（モルキュール）分子<br>\n2つ以上の原子から構成されるUIコンポーネントです。（例）削除ボタン、検索フォームやメニューリストなど</p>\n<p>Organisms（オルガニズム）有機体<br>\n分子を組み合わせて作るUIコンポーネントです（例）ヘッダー、フッター、パン屑、モーダルやテーブルなど</p>\n<p>Templates テンプレート<br>\nコンテンツの入っていないレイアウト情報で、Viewのみのワイヤーフレームと同じです。</p>\n<p>Pages ページ<br>\nテンプレートに画像やテキストなど、具体的なコンテンツ情報が入っているものです。</p>\n<h1>議論になりそうな点</h1>\n<h2>storeの参照の範囲</h2>\n<p>他の記事を読んでもAtomとMoleculeからはstoreの参照はしないという意見がほとんどでした。AtomとMoleculeは複数コンポーネントから呼び出す想定があるため、storeの参照をすると他のコンポーネントにも影響を与えるからです。例えば、特定のボタンをdisabled属性を付与した時に、他コンポーネントの同じボタンもdisabledになってしまうという事かと思われます。（判断しやすくするために、プレフィックスを与えるのがベスト?）</p>\n<h2>Atomsの粒度</h2>\n<p>ボタンは&lt;button&gt;や&lt;a href=&quot;&quot;&gt;をボタンに見立てたものなどがあります。aタグの場合、最小単位はリンクですが、これをボタンとして扱うのかという事です。他にもラベルはテキストを含めたものをAtomsとして扱うのか、数値は1000の単位になったらカンマを入れる処置までatomsに含めるのか。</p>\n<h2>Atomsのコンポーネントの肥大化の懸念</h2>\n<p>ボタン1つ取っても、送信ボタン・完了ボタン・削除ボタン・戻るボタンなど種類は多種多様ある。そのため、atoms/btn/send.vueのように間に1階層挟んだ方が見通しが良い?</p>\n<h2>Nuxtとの相性</h2>\n<p>Nuxt.jsにはpagesやlayoutsディレクトリがあるので、Atomic Designとどう合わせるか。componentsディレクトリには、pages以外の4階層を配置して、pagesディレクトリにpagesを置くのがベストなのか。</p>\n<h1>参考記事</h1>\n<ul>\n<li><a href=\"https://logmi.jp/tech/articles/320358\">Atomic Designを採用したWeb開発におけるistyleの現状と課題 - ログミーTech</a></li>\n<li><a href=\"https://design.dena.com/design/atomic-design-%E3%82%92%E5%88%86%E3%81%8B%E3%81%A3%E3%81%9F%E3%81%A4%E3%82%82%E3%82%8A%E3%81%AB%E3%81%AA%E3%82%8B/\">Atomic Design を分かったつもりになる | DeNA DESIGN BLOG</a></li>\n<li><a href=\"https://qiita.com/hareku/items/04705fcf92cc80ec4095\">Vue.jsでAtomic Designを実践する - Qiita</a></li>\n</ul>\n",
  "dir": "posts/json",
  "base": "20200429.json",
  "ext": ".json",
  "sourceBase": "20200429.md",
  "sourceExt": ".md"
}